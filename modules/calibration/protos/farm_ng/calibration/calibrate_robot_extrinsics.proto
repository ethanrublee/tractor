syntax = "proto3";

import "farm_ng/perception/geometry.proto";

package farm_ng.calibration;
option go_package = "github.com/farm-ng/genproto/calibration";

message CartesianWorkspace {
  // The origin of the workspace, relative to some (application-specific) root frame.
  farm_ng.perception.SE3Pose root_pose_origin = 1;

  // The size of the workspace, in meters, along its X, Y, and Z dimensions.
  farm_ng.perception.Vec3 size = 2;
}

// Evenly subdivides a cartesian workspace into a set of axis-aligned poses.
message SampledCartesianWorkspace {
  CartesianWorkspace workspace = 1;

  // The number of evenly-spaced samples to take along the X,Y, and Z dimensions, respectively.
  // The first sample along each dimension is taken at its origin.
  // The second sample along each dimension is taken at the extent of the workspace.
  // Additional samples continue to evenly divide the workspace.
  //
  // For example, on the unit cube,
  // {sample_count_x: 1, sample_count_y: 2, sample_count_z: 3} would sample:
  // {{0, 0, 0.0}, {0, 1, 0.0},
  //  {0, 0, 0.5}, {0, 1, 0.5},
  //  {0, 0, 1.0}, {0, 1, 1.0}},
  //
  // Values than or equal to zero default to 1.
  int32 sample_count_x = 2;
  int32 sample_count_y = 3;
  int32 sample_count_z = 4;

  // TODO(isherman): Support rotation
}


message CalibrateRobotExtrinsicsConfiguration {
  SampledCartesianWorkspace sampled_workspace = 1;
}
