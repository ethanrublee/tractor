// source: farm_ng_proto/tractor/v1/geometry.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.PartialVec2', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.PartialVec3', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.Quaternion', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.SE3Pose', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.Vec2', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.Vec3', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.Vec2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.Vec2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.Vec2.displayName = 'proto.farm_ng_proto.tractor.v1.Vec2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.PartialVec2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.PartialVec2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.PartialVec2.displayName = 'proto.farm_ng_proto.tractor.v1.PartialVec2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.Vec3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.Vec3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.Vec3.displayName = 'proto.farm_ng_proto.tractor.v1.Vec3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.PartialVec3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.PartialVec3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.PartialVec3.displayName = 'proto.farm_ng_proto.tractor.v1.PartialVec3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.Quaternion.displayName = 'proto.farm_ng_proto.tractor.v1.Quaternion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.SE3Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.SE3Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.SE3Pose.displayName = 'proto.farm_ng_proto.tractor.v1.SE3Pose';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.Vec2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.Vec2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Vec2.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.Vec2}
 */
proto.farm_ng_proto.tractor.v1.Vec2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.Vec2;
  return proto.farm_ng_proto.tractor.v1.Vec2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.Vec2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.Vec2}
 */
proto.farm_ng_proto.tractor.v1.Vec2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.Vec2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.Vec2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Vec2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Vec2} returns this
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Vec2} returns this
 */
proto.farm_ng_proto.tractor.v1.Vec2.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.PartialVec2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = msg.getX()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    y: (f = msg.getY()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.PartialVec2;
  return proto.farm_ng_proto.tractor.v1.PartialVec2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setX(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.PartialVec2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getY();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.DoubleValue x = 1;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.getX = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 1));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2} returns this
*/
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.setX = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2} returns this
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.clearX = function() {
  return this.setX(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.DoubleValue y = 2;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.getY = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 2));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2} returns this
*/
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.setY = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec2} returns this
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.clearY = function() {
  return this.setY(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PartialVec2.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.Vec3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.Vec3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Vec3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.Vec3}
 */
proto.farm_ng_proto.tractor.v1.Vec3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.Vec3;
  return proto.farm_ng_proto.tractor.v1.Vec3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.Vec3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.Vec3}
 */
proto.farm_ng_proto.tractor.v1.Vec3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.Vec3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.Vec3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Vec3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Vec3} returns this
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Vec3} returns this
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Vec3} returns this
 */
proto.farm_ng_proto.tractor.v1.Vec3.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.PartialVec3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: (f = msg.getX()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    y: (f = msg.getY()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f),
    z: (f = msg.getZ()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.PartialVec3;
  return proto.farm_ng_proto.tractor.v1.PartialVec3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setX(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setY(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.PartialVec3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.PartialVec3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getY();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
  f = message.getZ();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.DoubleValue x = 1;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.getX = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 1));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
*/
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.setX = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.clearX = function() {
  return this.setX(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.DoubleValue y = 2;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.getY = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 2));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
*/
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.setY = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.clearY = function() {
  return this.setY(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.DoubleValue z = 3;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.getZ = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 3));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
*/
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.setZ = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.PartialVec3} returns this
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.clearZ = function() {
  return this.setZ(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PartialVec3.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Quaternion.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    w: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.Quaternion;
  return proto.farm_ng_proto.tractor.v1.Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setW(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getW();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion} returns this
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion} returns this
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion} returns this
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double w = 4;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.Quaternion} returns this
 */
proto.farm_ng_proto.tractor.v1.Quaternion.prototype.setW = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.SE3Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.SE3Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.farm_ng_proto.tractor.v1.Vec3.toObject(includeInstance, f),
    rotation: (f = msg.getRotation()) && proto.farm_ng_proto.tractor.v1.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.SE3Pose;
  return proto.farm_ng_proto.tractor.v1.SE3Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.SE3Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.farm_ng_proto.tractor.v1.Vec3;
      reader.readMessage(value,proto.farm_ng_proto.tractor.v1.Vec3.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new proto.farm_ng_proto.tractor.v1.Quaternion;
      reader.readMessage(value,proto.farm_ng_proto.tractor.v1.Quaternion.deserializeBinaryFromReader);
      msg.setRotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.SE3Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.SE3Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.farm_ng_proto.tractor.v1.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getRotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.farm_ng_proto.tractor.v1.Quaternion.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec3 position = 1;
 * @return {?proto.farm_ng_proto.tractor.v1.Vec3}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.getPosition = function() {
  return /** @type{?proto.farm_ng_proto.tractor.v1.Vec3} */ (
    jspb.Message.getWrapperField(this, proto.farm_ng_proto.tractor.v1.Vec3, 1));
};


/**
 * @param {?proto.farm_ng_proto.tractor.v1.Vec3|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose} returns this
*/
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose} returns this
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quaternion rotation = 2;
 * @return {?proto.farm_ng_proto.tractor.v1.Quaternion}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.getRotation = function() {
  return /** @type{?proto.farm_ng_proto.tractor.v1.Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.farm_ng_proto.tractor.v1.Quaternion, 2));
};


/**
 * @param {?proto.farm_ng_proto.tractor.v1.Quaternion|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose} returns this
*/
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.setRotation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.SE3Pose} returns this
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.clearRotation = function() {
  return this.setRotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.SE3Pose.prototype.hasRotation = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.farm_ng_proto.tractor.v1);
