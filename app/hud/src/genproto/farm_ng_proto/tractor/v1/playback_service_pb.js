// source: farm_ng_proto/tractor/v1/playback_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.ListLogsRequest', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.ListLogsResponse', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.OpenLogRequest', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.OpenLogResponse', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.PlayRequest', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.PlayRequest.Rate', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.PlayResponse', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.StopRequest', null, global);
goog.exportSymbol('proto.farm_ng_proto.tractor.v1.StopResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.ListLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.ListLogsRequest.displayName = 'proto.farm_ng_proto.tractor.v1.ListLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.farm_ng_proto.tractor.v1.ListLogsResponse.repeatedFields_, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.ListLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.ListLogsResponse.displayName = 'proto.farm_ng_proto.tractor.v1.ListLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.OpenLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.OpenLogRequest.displayName = 'proto.farm_ng_proto.tractor.v1.OpenLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.OpenLogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.OpenLogResponse.displayName = 'proto.farm_ng_proto.tractor.v1.OpenLogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.PlayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.PlayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.PlayRequest.displayName = 'proto.farm_ng_proto.tractor.v1.PlayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.PlayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.PlayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.PlayResponse.displayName = 'proto.farm_ng_proto.tractor.v1.PlayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.StopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.StopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.StopRequest.displayName = 'proto.farm_ng_proto.tractor.v1.StopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.farm_ng_proto.tractor.v1.StopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.farm_ng_proto.tractor.v1.StopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.farm_ng_proto.tractor.v1.StopResponse.displayName = 'proto.farm_ng_proto.tractor.v1.StopResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.ListLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsRequest}
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.ListLogsRequest;
  return proto.farm_ng_proto.tractor.v1.ListLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsRequest}
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.ListLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.ListLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.ListLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    logPathsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsResponse}
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.ListLogsResponse;
  return proto.farm_ng_proto.tractor.v1.ListLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsResponse}
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLogPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.ListLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogPathsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string log_paths = 1;
 * @return {!Array<string>}
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.getLogPathsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.setLogPathsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.addLogPaths = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.farm_ng_proto.tractor.v1.ListLogsResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.ListLogsResponse.prototype.clearLogPathsList = function() {
  return this.setLogPathsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.OpenLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    logPath: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogRequest}
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.OpenLogRequest;
  return proto.farm_ng_proto.tractor.v1.OpenLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogRequest}
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.OpenLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLogPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string log_path = 1;
 * @return {string}
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.prototype.getLogPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogRequest} returns this
 */
proto.farm_ng_proto.tractor.v1.OpenLogRequest.prototype.setLogPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.OpenLogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nEvents: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stampBegin: (f = msg.getStampBegin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    stampEnd: (f = msg.getStampEnd()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.OpenLogResponse;
  return proto.farm_ng_proto.tractor.v1.OpenLogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNEvents(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStampBegin(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStampEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.OpenLogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNEvents();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStampBegin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStampEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 n_events = 1;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.getNEvents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.setNEvents = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp stamp_begin = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.getStampBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} returns this
*/
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.setStampBegin = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.clearStampBegin = function() {
  return this.setStampBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.hasStampBegin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp stamp_end = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.getStampEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} returns this
*/
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.setStampEnd = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.farm_ng_proto.tractor.v1.OpenLogResponse} returns this
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.clearStampEnd = function() {
  return this.setStampEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.OpenLogResponse.prototype.hasStampEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.PlayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.PlayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startEvent: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nEvents: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playbackRate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    loop: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.PlayRequest;
  return proto.farm_ng_proto.tractor.v1.PlayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.PlayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartEvent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNEvents(value);
      break;
    case 3:
      var value = /** @type {!proto.farm_ng_proto.tractor.v1.PlayRequest.Rate} */ (reader.readEnum());
      msg.setPlaybackRate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLoop(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.PlayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.PlayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartEvent();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNEvents();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPlaybackRate();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLoop();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.Rate = {
  RATE_UNSPECIFIED: 0,
  RATE_ASAP: 1,
  RATE_REALTIME: 2
};

/**
 * optional int64 start_event = 1;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.getStartEvent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest} returns this
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.setStartEvent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 n_events = 2;
 * @return {number}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.getNEvents = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest} returns this
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.setNEvents = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Rate playback_rate = 3;
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest.Rate}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.getPlaybackRate = function() {
  return /** @type {!proto.farm_ng_proto.tractor.v1.PlayRequest.Rate} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.farm_ng_proto.tractor.v1.PlayRequest.Rate} value
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest} returns this
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.setPlaybackRate = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool loop = 4;
 * @return {boolean}
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.getLoop = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.farm_ng_proto.tractor.v1.PlayRequest} returns this
 */
proto.farm_ng_proto.tractor.v1.PlayRequest.prototype.setLoop = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.PlayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.PlayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.PlayResponse}
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.PlayResponse;
  return proto.farm_ng_proto.tractor.v1.PlayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.PlayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.PlayResponse}
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.PlayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.PlayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.PlayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.StopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.StopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.StopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.StopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.StopRequest}
 */
proto.farm_ng_proto.tractor.v1.StopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.StopRequest;
  return proto.farm_ng_proto.tractor.v1.StopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.StopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.StopRequest}
 */
proto.farm_ng_proto.tractor.v1.StopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.StopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.StopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.StopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.StopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.farm_ng_proto.tractor.v1.StopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.farm_ng_proto.tractor.v1.StopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.farm_ng_proto.tractor.v1.StopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.StopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.farm_ng_proto.tractor.v1.StopResponse}
 */
proto.farm_ng_proto.tractor.v1.StopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.farm_ng_proto.tractor.v1.StopResponse;
  return proto.farm_ng_proto.tractor.v1.StopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.farm_ng_proto.tractor.v1.StopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.farm_ng_proto.tractor.v1.StopResponse}
 */
proto.farm_ng_proto.tractor.v1.StopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.farm_ng_proto.tractor.v1.StopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.farm_ng_proto.tractor.v1.StopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.farm_ng_proto.tractor.v1.StopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.farm_ng_proto.tractor.v1.StopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.farm_ng_proto.tractor.v1);
